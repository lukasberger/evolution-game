  _____       _                        _   _____           _                  _ 
 |_   _|     | |                      | | |  __ \         | |                | |
   | |  _ __ | |_ ___ _ __ _ __   __ _| | | |__) | __ ___ | |_ ___   ___ ___ | |
   | | | '_ \| __/ _ \ '__| '_ \ / _` | | |  ___/ '__/ _ \| __/ _ \ / __/ _ \| |
  _| |_| | | | ||  __/ |  | | | | (_| | | | |   | | | (_) | || (_) | (_| (_) | |
 |_____|_| |_|\__\___|_|  |_| |_|\__,_|_| |_|   |_|  \___/ \__\___/ \___\___/|_|
                                                                                
                                                                                

The API protocol for statically-linked, external players consist of four
pieces: (1) the start-up phase, (2) the beginning of a turn (step 1), (3) the
request to players to choose actions with their cards (steps 2 and 3), and (4)
the question to players to pick the next action during the feeding cycle.
Otherwise there is no communication between the external player and the dealer.

The diagrams include internal player objects that represent the external
players with respect to the dealer. 


  ___ _            _     _   _      
 / __| |_ __ _ _ _| |_  | | | |_ __ 
 \__ \  _/ _` | '_|  _| | |_| | '_ \
 |___/\__\__,_|_|  \__|  \___/| .__/
                              |_|   

The main program creates a dealer and as many players as required (between 3
and 8). It then hands handles to these players to the dealer and permits the
latter to take over.

 +------+
 | main |
 +------+
    |
    |  p1 =  new(n)          +----------+
    |----------------------> | player 1 |
    |                        +----------+
   ...                           ...
    |  p2 = new(n)                |         +----------+
    |---------------------------- | ------> | player 2 |
    |                             |         +----------+
    |                             |                |
    | nu +--------+               |                |     (A)
    |--> | dealer |               |                |
    |    +--------+               |                |
    |        |                    |                |
    |        | new(p1) +------+   |                |
    |        |-------->| in 1 |   |                |     (B)
    |        |         +------+   |                |
    |        |            |       |                |
    |        | new(p2)    |       |   +------+     |
    |        |----------------------->| in 2 |     |
    |        |            |       |   +------+     |
    |        |            |       |                |
 
(A) nu = new(p1,..,p2)
(B) in : an internal representation of a player

Figure 1: Starting up

  _____              _   ___ _              _ 
 |_   _|  _ _ _ _ _ (_) / __| |_ ___ _ __  / |
   | || || | '_| ' \ _  \__ \  _/ -_) '_ \ | |
   |_| \_,_|_| |_||_(_) |___/\__\___| .__/ |_|
                                    |_|       

The dealer hands each external player the necessary pieces at the beginning of
a turn: a species board (if needed) and additional cards to play the turn.

 +--------+   +------+   +------+  +----------+  +----------+
 | dealer |   | in 1 |   | in 2 |  | player 1 |  | player 2 |
 +--------+   +------+   +------+  +----------+  +----------+
     |             |          |          |             |
     | start(w,b,c)|          |          |             |
     |-----------> | start(w,t)          |             |
     |             |-------------------> |             |
     | start(w,b,c)|          |          |             |
     |----------------------> |  start(w,t)            |
     |             |          |----------------------> |
 
w ~ the food at the watering hole
b ~ an optional species board with pop. = 1
c ~ the appropriate number of cards
t ~ current state of self to which the internal player added:
    -- 1 species board [pop. = 1] w/o traits (if required)
    -- 1 trait card/existing species board
    -- plus 3 additional trait cards
Figure 2: Launching a turn

By separating this step from the next one, players can begin to precompute
strategies while they wait for the request to choose actions with their cards.


  _____              _   ___ _                 ___                _   ____
 |_   _|  _ _ _ _ _ (_) / __| |_ ___ _ __ ___ |_  )  __ _ _ _  __| | |__ /
   | || || | '_| ' \ _  \__ \  _/ -_) '_ (_-<  / /  / _` | ' \/ _` |  |_ \
   |_| \_,_|_| |_||_(_) |___/\__\___| .__/__/ /___| \__,_|_||_\__,_| |___/
                                    |_|                                   

The dealer asks the players how they wish to use their cards. With this request
the dealer reveals some knowledge about the other players, including the order
in which they will take the turn. This design choice will accommodate improved
adherence to the actual rules of Evolution at a later time.

 +--------+   +------+   +------+  +----------+  +----------+
 | dealer |   | in 1 |   | in 2 |  | player 1 |  | player 2 |
 +--------+   +------+   +------+  +----------+  +----------+
     |             |         |            |             |
     | choose(s)   |         |            |             |
     |-----------> | choose(c,d)          |             |
     |             |--------------------> |             |
     | choose(s)   |         |            |             |
     |---------------------> | choose(c,d)              |
     |             |         |------------------------> |
     |             |         |            |             |
     |             |         |            |  return(r)  |
     | <================================================|
     |             |         |            |             |
     |             |         |return(r)   |             | (C)
     | <==================================|             |
     |             |         |            |             |
 
(C) No order is assumed here. All players might be queried "in parallel".
 
s ~ the state of all players
c ~ the state of all players that precede this one for the turn
    turn minus their cards and food in bag
d ~ the state of all players that come after this one for the
    turn minus their cards and food in bag
 
r ~ a representation of the following choices:
    -- the food card required (step 2)
    -- the card exchanges for (step 3):
       -- growing the populations of species boards
       -- growing the bodies of species boards
       -- adding new species board (to the right)
       -- replacing traits of existing species boards

Figure 3: Asking for card actions

  _____              _   ___ _              _ _  
 |_   _|  _ _ _ _ _ (_) / __| |_ ___ _ __  | | | 
   | || || | '_| ' \ _  \__ \  _/ -_) '_ \ |_  _|
   |_| \_,_|_| |_||_(_) |___/\__\___| .__/   |_| 
                                    |_|          

The dealer executes the choices that the players made and then runs the feeding
phase of the turn. For the latter, it will interact with the external players
as needed.

 +--------+   +------+   +------+   +----------+  +----------+
 | dealer |   | in 1 |   | in 2 |   | player 1 |  | player 2 |
 +--------+   +------+   +------+   +----------+  +----------+
     |             |        |               |             |
     | step4i(r)   |        |               |             |
     |-----------> |        |               |             |
     | step4i(r)   |        |               |             |
     |--------------------> |               |             |
     |             |        |               |             |
  feeding()        |        |               |             |
 +-- |             |        |               |             |
 |   | feedNext(xs)|        |               |             | (D)
 |   |--------------------> | feedNext(ys)  |             |
 |   |             |        |---------------------------->|
 |   |             |        |               |             |
 |   |             |        |               |  return(fc) |
 |   | <==================================================|
 |   |             |        |               |             |
 |   | feedNext(xs)|        |               |             |
 |   |-----------> | feednext(ys)           |             |
 |   |             |----------------------> |             |
 |   |             |        |               |             |
 |   |             |        |    return(fc) |             |
 |   | <====================================|             |
 |   |             |        |               |             |
... ...           ...      ...             ...           ...
 |   |             |        |               |             |
 +-> |             |        |               |             |
     |             |        |               |             |
 
 
(D) The dealer will call only if there is more than one feeding choice.
 
    It will automatically feed
    -- a single species with a non-full fat-food trait card
       (to the max possible)
    -- a single vegetarian
    -- a single carnivore that can attack only one species
       from a different player (no self-attack is allowed).
 
    NOTE: for the Silly player this API choice makes no difference.
 
xs ~ the dealer's current knowledge of the watering hole and
     the players in attackable order [all playes starting from
     current, in turn order], minus their cards and food in bag
ys ~ xs + the player's current state (bag, cards, species)
 
fc ~ food choice (what to eat next)

Figure 4: The feeding step
